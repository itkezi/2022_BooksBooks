<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.3.xsd">
	
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
      <constructor-arg index="0" value="4"/>
   </bean>
	
	<!-- 
	servlet-context 영역과 root-context 영역은 서로 완전히 격리된 영역이다
	특히 bean 설정과 관련하여 서로 침범 할 수 없다
	security-context.xml 에서 사용할 bean 들은
	여기에서 한번 더 scan 을 해준다 
	-->
	<context:component-scan base-package="com.ballza.lunch.service.auth" />
	<context:component-scan base-package="com.ballza.lunch.config"/>
	
	
	<!-- 
		permitAll : 누구나 접근 가능하도록 설정
			로그인이 되었거나, 로그인이 되지 않았거나
		isAnonymous() : 로그인 되지 않은 사용자
	 -->
		<!-- 로그인과정을직접만들지않아요??? -->
		<!-- invalidate-session 데이터세션제거 delete-cookies JSESSIONID 지우기 logout-success-url 머였지 -->
	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/user/join" access="isAnonymous()"/>
		<sec:intercept-url pattern="/user/login" access="isAnonymous()"/>
		<sec:intercept-url pattern="/user/mypage" access="isAuthenticated()"/>
		
		<sec:intercept-url pattern="/admin/**" access="isAuthenticated() AND hasRole('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/" access="permitAll"/>
		<sec:intercept-url pattern="/static/**" access="permitAll"/>
		
		<sec:form-login login-page="/user/login?error=LOGIN_NEED" login-processing-url="/user/login" username-parameter="username" password-parameter="password"/>
		<sec:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/"/>
	</sec:http>
	
	<!-- 
	로그인 절차가 시작되면 AuthenticationProvider 클래스에게
	요청을 하여 로그인 을 수행하라
	
	AuthenticationProvider 는 UserDetailsService 에게
	사용자 정보를 요청하여 DB 로 부터 데이터를 SELECT 한다
	
	정상적인 절차가 완료되면 user 와 token 이 담긴 객체를 return 하여
	Security 에게 알려준다
	 -->
	<!-- 실제로 로그인을 실행하기 위한 bean 등록 -->
	<sec:authentication-manager>
		<sec:authentication-provider ref="authenticationProvider"/>
	</sec:authentication-manager>
	
	<!-- 
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="callor"  
						password="{noop}!korea8080" authorities="ROLE_ADMIN"/>
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	 -->
</beans>
